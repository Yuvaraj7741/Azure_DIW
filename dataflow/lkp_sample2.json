{
   "name" : "lkp_sample2",
   "properties" : {
      "type" : "MappingDataFlow",
      "typeProperties" : {
         "sources" : [ {
            "dataset" : {
               "referenceName" : "SequentialFile0",
               "type" : "DatasetReference"
            },
            "name" : "SequentialFile1",
            "script" : "source(output(\n\t\temp_id as String,\n\t\tname as String,\n\t\tsalary as Integer,\n\t\tdept_code as String\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> SequentialFile1"
         }, {
            "dataset" : {
               "referenceName" : "SequentialFile1",
               "type" : "DatasetReference"
            },
            "name" : "SequentialFile2",
            "script" : "source(output(\n\t\temp_id as String,\n\t\tname as String,\n\t\tdept_code as String\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> SequentialFile2"
         }, {
            "dataset" : {
               "referenceName" : "SequentialFilejoin",
               "type" : "DatasetReference"
            },
            "name" : "SequentialFileJn",
            "script" : "source(output(\n\t\tsur_name as String,\n\t\tlocation as String,\n\t\tdesignation as String,\n\t\tid as String,\n\t\temp_dept_code as String\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> SequentialFileJn"
         }, {
            "dataset" : {
               "referenceName" : "SequentialFilelkp",
               "type" : "DatasetReference"
            },
            "name" : "SequentialFilelkp",
            "script" : "source(output(\n\t\tcontact_no as String,\n\t\temail_address as String,\n\t\tid as String\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> SequentialFilelkp"
         }, {
            "dataset" : {
               "referenceName" : "SequentialFileun",
               "type" : "DatasetReference"
            },
            "name" : "SequentialFileUn",
            "script" : "source(output(\n\t\temp_id as String,\n\t\tname as String,\n\t\tsalary as Integer,\n\t\tdept_code as String\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> SequentialFileUn"
         } ],
         "sinks" : [ {
            "dataset" : {
               "referenceName" : "DataSettgt",
               "type" : "DatasetReference"
            },
            "name" : "DataSet3",
            "script" : "RtrEMPLOYEE@Case_DataSet3 sink(saveMode:'overwrite' ) ~> DataSet3"
         }, {
            "dataset" : {
               "referenceName" : "DataSet26",
               "type" : "DatasetReference"
            },
            "name" : "DataSet2",
            "script" : "SEQTRANS sink(saveMode:'overwrite' ) ~> DataSet2"
         }, {
            "dataset" : {
               "referenceName" : "DataSet25",
               "type" : "DatasetReference"
            },
            "name" : "DataSet1",
            "script" : "RtrEMPLOYEE@Case_DataSet1 sink(saveMode:'overwrite' ) ~> DataSet1"
         } ],
         "transformations" : [ {
            "name" : "AggEMPLOYEE",
            "script" : "ExpEMPLOYEE aggregate(\n\tgroupBy(u_NAME = u_NAME),\n\tgroupBy(dept_code = dept_code),\n\tgroupBy(name = name),\n\tgroupBy(emp_id = emp_id),\n\t\to_salary = sum(salary),\n\t\to_emp_id = count(emp_id)) ~> AggEMPLOYEE"
         }, {
            "name" : "ExpEMPLOYEE",
            "script" : "funelInst derive(u_NAME = upper(name)) ~> ExpEMPLOYEE"
         }, {
            "name" : "RtrEMPLOYEE",
            "script" : "AggEMPLOYEE split(o_salary == 20000,\n o_salary > 20000,\ndisjoint: false\n) ~> RtrEMPLOYEE@(Case_DataSet3, Case_DataSet1)"
         }, {
            "name" : "funelInst",
            "script" : "SequentialFile1, SequentialFileUn union(byName: true) ~> funelInst"
         }, {
            "name" : "JNREMP",
            "script" : "SRTTRANS, SequentialFileJn join(emp_id == id && \ndept_code == emp_dept_code,\n joinType:'inner',\n\tbroadcast: 'none')~> JNREMP"
         }, {
            "name" : "Lookup6",
            "script" : "JNREMP, SequentialFilelkp lookup(emp_id == SequentialFilelkp@id,\n\tbroadcast: 'none') ~> Lookup6"
         }, {
            "name" : "SRTTRANS",
            "script" : "SequentialFile2 sort(asc(emp_id,true),\n\tasc(name,true),\n\tdesc(dept_code,true)) ~> SRTTRANS"
         }, {
            "name" : "FILTRANS",
            "script" : "Lookup6 filter(emp_id == 478916) ~> FILTRANS"
         }, {
            "name" : "SEQTRANS",
            "script" : "FILTRANS keyGenerate(output(SNO as long),\n\tstartAt: 1L) ~> SEQTRANS"
         } ]
      }
   }
}